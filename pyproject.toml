[build-system]
requires = ["setuptools >= 64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["cirkit*"]

[project]
name = "libcirkit"
version = "0.2.1"
description = "a python framework to build, learn and reason about probabilistic circuits and tensor networks"
readme = "README.md"
requires-python = ">=3.10"
license = { text="GPLv3" }
keywords = [
  "probabilistic-modeling",
  "tractable-models",
  "probabilistic-inference",
  "probabilistic-circuits",
  "probabilistic-machine-learning",
  "probabilistic-reasoning",
  "tensor-network-decompositions",
  "tractable-inference",
  "tensor-net"
]
authors = [
  { name="The APRIL Lab." }
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: OS Independent",
]
dependencies = [
  "torch>=2.3.0",
  "numpy>=2.1.0",
  "opt_einsum>=3.4.0",
  "einops~=0.8.0",
  "scipy~=1.14.0",
  "graphviz~=0.20.3"
]

[project.urls]
"Homepage" = "https://github.com/april-tools/cirkit"
"Bug Tracker" = "https://github.com/april-tools/cirkit/issues"
"Coverage" = "https://app.codecov.io/gh/april-tools/cirkit"
"Documentation" = "https://cirkit-docs.readthedocs.io"

[project.optional-dependencies]
dev = [
  "black[jupyter]~=25.0",
  "mypy~=1.16.0",
  "pylint~=3.3.0",
  "pylint-per-file-ignores~=1.4.0",
  "pytest",
  "pytest-cov",
]
docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings-python",
  "mkdocs-gen-files",
  "mkdocs-literate-nav",
  "mkdocs-section-index",
  "mkdocs-jupyter",
]
notebooks = [
  "notebook",
  "torchvision",
  "matplotlib",
  "scikit-learn",
  "pandas",
  "h5py",
  "PySDD",
]

################################################################################
# Anything below this line does count to the "hash of pyproject" in workflows,
# as they are for development tools but not project release.

# Configs for testing. Rules for coverage may be changed to reflect unreachable-by-design.

# unit test
[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

# code coverage
[tool.coverage.run]
branch = true
source = ["cirkit"]
[tool.coverage.report]
show_missing = true
exclude_also = [  # regex for exclusion
  '@overload',
]

# Configs for linting. Rules may be changed/lifted with a good reason.

# code style
[tool.black]
line-length = 100
target-version = ["py310"]
required-version = "25"

# import style
[tool.isort]
py_version = 310
profile = "black"
line_length = 100
extra_standard_library = [  # we treat these as stdlib
  "typing_extensions",
]

# general linting
[tool.pylint.main]
py-version = "3.10"
fail-under = 9.3
load-plugins = [  # as available in pylint/extensions
  "pylint_per_file_ignores",  # TODO: wait for native support in pylint
  "pylint.extensions.broad_try_clause",
  "pylint.extensions.check_elif",
  "pylint.extensions.code_style",
  "pylint.extensions.comparison_placement",
  "pylint.extensions.consider_refactoring_into_while_condition",
  "pylint.extensions.dict_init_mutate",
  "pylint.extensions.dunder",
  "pylint.extensions.empty_comment",
  "pylint.extensions.eq_without_hash",
  "pylint.extensions.for_any_all",
  "pylint.extensions.overlapping_exceptions",
  "pylint.extensions.private_import",
  "pylint.extensions.redefined_loop_name",
  "pylint.extensions.redefined_variable_type",
  "pylint.extensions.set_membership"
]
per-file-ignores = [  # TODO: wait for native support in pylint
    "/tests/:missing-function-docstring,missing-return-doc",
]

[tool.pylint."design"]
max-statements = 60  # default=50
max-branches = 15  # default=12
max-locals = 25  # default=15
max-args = 12  # default=5: many functions require lots of hyperparameters
max-positional-arguments = 12  # default=5: many functions require lots of hyperparameters
max-parents = 8  # default=7: there is a deep hierarchy of parameter operation nodes

[tool.pylint."messages control"]
max-line-length = 100
disable = [
  "fixme",
  "too-few-public-methods",
  "missing-module-docstring",
  "consider-using-assignment-expr",
  "use-implicit-booleaness-not-len",
  "useless-import-alias",
  "unnecessary-lambda-assignment",
  "no-member",
  "useless-parent-delegation",
  "duplicate-code",
  "too-many-lines",
]

# type checking
[tool.mypy]
python_version = "3.10"
follow_imports = "silent"
# https://mypy.readthedocs.io/en/stable/config_file.html#miscellaneous
warn_unused_configs = true
# https://mypy.readthedocs.io/en/stable/config_file.html#disallow-dynamic-typing
disallow_any_explicit = false
# https://mypy.readthedocs.io/en/stable/config_file.html#untyped-definitions-and-calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
#check_untyped_defs = true
disallow_untyped_decorators = true
# https://mypy.readthedocs.io/en/stable/config_file.html#configuring-warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["graphviz.*"]
ignore_missing_imports = true
